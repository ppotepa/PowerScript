// Test all CYCLE syntax variations

LINK System

// 1. CYCLE WHILE (condition) - Already working
FLEX counter = 0
CYCLE WHILE (counter < 3) {
    FLEX dummy = Console -> WriteLine(counter -> ToString())
    counter = counter + 1
}

// 2. CYCLE 5 { } - Count-based (already working)
CYCLE 3 {
    FLEX dummy = Console -> WriteLine("Count")
}

// 3. CYCLE 3 AS X { } - Count with custom variable
CYCLE 3 AS X {
    FLEX dummy = Console -> WriteLine(X -> ToString())
}

// 4. CYCLE ELEMENTS OF a { } - Explicit collection
FLEX nums = [10, 20, 30]
CYCLE ELEMENTS OF nums {
    FLEX dummy = Console -> WriteLine(A -> ToString())
}

// 5. CYCLE ELEMENTS OF a AS item { } - Collection with custom variable
CYCLE ELEMENTS OF nums AS item {
    FLEX dummy = Console -> WriteLine(item -> ToString())
}

// 6. CYCLE [1, 5] { } - Array literal range
CYCLE [1, 5] {
    FLEX dummy = Console -> WriteLine(A -> ToString())
}

// 7. CYCLE RANGE FROM 1 TO 5 { } - Explicit range
CYCLE RANGE FROM 1 TO 5 {
    FLEX dummy = Console -> WriteLine(A -> ToString())
}

// 8. CYCLE RANGE FROM 1 TO 5 AS i { } - Range with custom variable  
CYCLE RANGE FROM 1 TO 5 AS i {
    FLEX dummy = Console -> WriteLine(i -> ToString())
}

FLEX dummy = Console -> WriteLine("All CYCLE syntaxes complete!")
