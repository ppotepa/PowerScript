LINK "../../stdlib/IO.ps"
LINK System
PRINT("=== Complex Test 1: Bubble Sort with Statistics ===")
PRINT("A comprehensive bubble sort implementation")
PRINT("with array operations and statistical analysis")
PRINT("")

PRINT("Initializing array of 15 elements")
FLEX arr = CHAIN 15

PRINT("Filling array with unsorted values")
FLEX arr[0] = 64
FLEX arr[1] = 34
FLEX arr[2] = 25
FLEX arr[3] = 12
FLEX arr[4] = 22
FLEX arr[5] = 11
FLEX arr[6] = 90
FLEX arr[7] = 88
FLEX arr[8] = 45
FLEX arr[9] = 50
FLEX arr[10] = 77
FLEX arr[11] = 33
FLEX arr[12] = 99
FLEX arr[13] = 18
FLEX arr[14] = 55

PRINT("")
PRINT("Original array (15 elements):")
CYCLE 15 AS i {
    PRINT arr[i]
}

PRINT("")
PRINT("Starting bubble sort algorithm...")
PRINT("Using nested loops for comparison")
PRINT("")

FLEX swapCount = 0
FLEX passCount = 0

CYCLE 15 AS outer {
    FLEX currentPass = outer + 1
    FLEX passCount = passCount + 1
    
    PRINT("Pass:")
    PRINT currentPass
    
    FLEX swapsThisPass = 0
    
    CYCLE 14 AS j {
        FLEX nextIdx = j + 1
        
        IF arr[j] > arr[nextIdx] {
            FLEX temp = arr[j]
            FLEX arr[j] = arr[nextIdx]
            FLEX arr[nextIdx] = temp
            
            FLEX swapCount = swapCount + 1
            FLEX swapsThisPass = swapsThisPass + 1
        }
    }
    
    PRINT("Swaps in this pass:")
    PRINT swapsThisPass
}

PRINT("")
PRINT("Sorting complete!")
PRINT("Total passes:")
PRINT passCount
PRINT("Total swaps:")
PRINT swapCount

PRINT("")
PRINT("Sorted array:")
CYCLE 15 AS i {
    PRINT arr[i]
}

PRINT("")
PRINT("Computing statistics...")

FLEX sum = 0
CYCLE 15 AS i {
    FLEX currentVal = arr[i]
    FLEX sum = sum + currentVal
}

PRINT("Sum of all elements:")
PRINT sum

FLEX avg = sum / 15
PRINT("Average value:")
PRINT avg

PRINT("")
PRINT("Finding minimum and maximum values")

FLEX min = arr[0]
FLEX max = arr[0]

CYCLE 15 AS i {
    FLEX currentVal = arr[i]
    
    IF currentVal < min {
        FLEX min = currentVal
    }
    
    IF currentVal > max {
        FLEX max = currentVal
    }
}

PRINT("Minimum value:")
PRINT min
PRINT("Maximum value:")
PRINT max

FLEX range = max - min
PRINT("Range (max - min):")
PRINT range

PRINT("")
PRINT("Verifying sort correctness...")
PRINT("Checking if array is in ascending order")

FLEX isorted = 0
CYCLE 14 AS i {
    FLEX nextIdx = i + 1
    IF arr[i] > arr[nextIdx] {
        FLEX isorted = 1
    }
}

IF isorted == 0 {
    PRINT("SUCCESS: Array is properly sorted")
}

IF isorted == 1 {
    PRINT("ERROR: Array is not sorted")
}

PRINT("")
PRINT("=== Test Complete ===")
PRINT("Lines of code: 140+")
