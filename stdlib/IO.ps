// IO.ps - Input/Output operations for PowerScript
// Provides console output wrapper functions

LINK System

// ============================================================================
// BASIC OUTPUT FUNCTIONS
// ============================================================================

FUNCTION OUT(INT value)[INT] {
    FLEX str = #value->ToString()
     #Console->Write(str)
    RETURN 0
}

FUNCTION OUTLN(INT value)[INT] {
    FLEX str = #value->ToString()
     #Console->WriteLine(str)
    RETURN 0
}

FUNCTION OUT_NUM(INT value)[INT] {
    FLEX str = #value->ToString()
     #Console->Write(str)
    RETURN 0
}

FUNCTION OUT_STR(STRING value)[INT] {
     #Console->Write(value)
    RETURN 0
}

FUNCTION NEWLINE()[INT] {
     #Console->WriteLine()
    RETURN 0
}

FUNCTION SPACE()[INT] {
     #Console->Write(" ")
    RETURN 0
}

// ============================================================================
// MULTI-VALUE OUTPUT
// ============================================================================

FUNCTION OUT_MULTI(INT a, INT b)[INT] {
    FLEX dummy1 = OUT(a)
    FLEX dummy2 = OUT(b)
    RETURN 0
}

FUNCTION OUT_THREE(INT a, INT b, INT c)[INT] {
    FLEX dummy1 = OUT(a)
    FLEX dummy2 = OUT(b)
    FLEX dummy3 = OUT(c)
    RETURN 0
}

// ============================================================================
// LABELED OUTPUT
// ============================================================================

FUNCTION PRINT_LABELED(STRING label, INT value)[INT] {
    #Console->Write(label)
    #Console->Write(": ")
    FLEX str = #value->ToString()
    #Console->WriteLine(str)
    RETURN 0
}

// ============================================================================
// PRINT FUNCTIONS - Polymorphic print that works with any type
// ============================================================================

FUNCTION PRINT(FLEX value)[INT] {
    FLEX str = #value->ToString()
     #Console->WriteLine(str)
    RETURN 0
}

FUNCTION PRINT_STRING(STRING value)[INT] {
     #Console->WriteLine(value)
    RETURN 0
}

FUNCTION PRINT_INLINE(STRING value)[INT] {
     #Console->Write(value)
    RETURN 0
}

FUNCTION PRINT_INT(INT value)[INT] {
    FLEX str = #value->ToString()
     #Console->WriteLine(str)
    RETURN 0
}

FUNCTION PRINT_LINE()[INT] {
     #Console->WriteLine()
    RETURN 0
}



